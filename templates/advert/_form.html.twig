{{ form_start(form) }}
<div>
    <h3 class="tracking-wide font-semibold text-2xl my-3 text-gray-800 dark:text-white">Personal Info </h3>
    <div class="grid grid-cols-6 gap-4 mb-7">
        {% if form.fullname is defined %}
        <div class="col-span-6">
            {{ form_row(form.fullname) }}
        </div>
        {% endif %}
        {% if form.email is defined %}
        <div class="col-span-3">
            {{ form_row(form.email) }}
        </div>
        {% endif %}
        {% if form.phone is defined %}
        <div class="col-span-3">
            {{ form_row(form.phone) }}
        </div>
    </div>
    {% endif %}
    <h3 class="tracking-wide font-semibold text-2xl my-1 text-gray-800 dark:text-white">Advert Info </h3>
    <div class="grid-cols-1 gap-4 mb-7">
        <div class="col-span-1 mb-2">
            {{ form_row(form.category) }}
        </div>
        <div class="col-span-1 mb-2">
            {{ form_row(form.title) }}
        </div>
        <div class="col-span-1 mb-2">
            {{ form_row(form.description) }}
        </div>
    </div>
    <h3 class="tracking-wide font-semibold text-2xl my-1 text-gray-800 dark:text-white">Address</h3>
    <div class="grid grid-cols-6 gap-4 mb-3">
        <div class="col-span-6 mb-2">
            {{ form_row(form.address) }}
        </div>
        <div class="col-span-3 mb-2">
            {{ form_row(form.state) }}
        </div>
        <div class="col-span-3 mb-2">
            {{ form_row(form.lga) }}
        </div>
    </div>
    {% if advert.uploadToken is not null %}
    <div class="mb-6">
        {{ form_label(form.photo)}}
        <div class="dropzone dropzone-default dz-clickable dark:bg-gray-700" data-controller="mydropzone" data-mydropzone-target="drop" data-dropurl="{{ path('dropzone_upload', {'upload_token': advert.uploadToken})}}">
            {{ form_widget(form.photo) }}
            {# {{ form_widget(form.photo, {attr: { 'data-mydropzone-target': 'drop' } }) }} #}
            <div class="dropzone-msg dz-message needsclick text-gray-600 dark:text-white">
                <h3 class="dropzone-msg-title">Drag here to upload or click here to browse</h3>
                <span class="dropzone-msg-desc text-sm">2 MB file size maximum. Allowed file types png, jpg.</span>
            </div>
        </div>
    </div>
{% endif %}
    {{ form_widget(form) }}
</div>
<div class="px-4 py-3 text-right sm:px-6">
    <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-deep-orange-600 dark:bg-deep-orange-800 hover:bg-deep-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-deep-orange-500">
        {{ button_label|default('Save') }}
    </button>
    {% if advert.id is not null %}
    <a href="{{ path('advert_show', {'id': advert.id})}}" class="inline-flex justify-center py-2 px-4 border border-deep-orange-800 shadow-sm text-sm font-medium rounded-md text-deep-orange-800 bg-white dark:bg-deep-orange-600 dark:border-transparent dark:text-gray-100 hover:bg-deep-orange-600 hover:text-gray-100 focus:outline-none focus:ring-0 border">
        Cancel
    </a>
    {% endif %}
</div>
{{ form_end(form) }}
<div class="mt-3">
    <h2 class="font-semibold text-xl mb-2">Uploaded Images</h2>
    <div class="w-full flex flex-wrap" data-controller="advert">
        {% for upload in advert.photos %}
        <div id="upbox_{{upload.id}}">
            <img class="w-52 h-52 p-3 rounded-l-sm" src="{{ vich_uploader_asset(upload) }}" alt="{{ advert.title }}">
            {{ include('upload/_delete_form.html.twig') }}
        </div>
        {% endfor %}
    </div>
</div>
<script>
let state = document.getElementById('advert_state');
state.addEventListener("change", function() {
    // ... retrieve the corresponding form.
    var form = this.closest('form');
    // Simulate form data, but only include the selected sport value.
    // Creating the XMLHttpRequest object
    var request = new XMLHttpRequest();
    formData = new FormData();
    formData.append(state.getAttribute("name"), state.value);

    // Instantiating the request object
    request.open(form.getAttribute("method"), window.location.href);
    // add xml request
    request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

    // Defining event listener for readystatechange event
    request.onreadystatechange = function() {
        // Check if the request is compete and was successful
        if (this.readyState === 4) {
            // Inserting the response from server into an HTML element
            var el = document.createElement('html');
            el.innerHTML = this.responseText;
            var tagname = el.querySelector('#advert_lga');
            document.querySelector("#advert_lga").innerHTML = tagname.innerHTML;
        }
    };

    // Sending the request to the server
    request.send(formData);

});
</script>